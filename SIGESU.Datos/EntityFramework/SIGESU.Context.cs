//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGESU.Datos.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SIGESUEntities : DbContext
    {
        public SIGESUEntities()
            : base("name=SIGESUEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SIGESU_PlanificacionSel_Result> SIGESU_PlanificacionSel(string fechaInicio, string fechaFin)
        {
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionSel_Result>("SIGESU_PlanificacionSel", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SIGESU_ProductoSelTodo_Result> SIGESU_ProductoSelTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_ProductoSelTodo_Result>("SIGESU_ProductoSelTodo");
        }
    
        public virtual ObjectResult<SIGESU_EspecialistaSelTodo_Result> SIGESU_EspecialistaSelTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_EspecialistaSelTodo_Result>("SIGESU_EspecialistaSelTodo");
        }
    
        public virtual ObjectResult<SIGESU_LaboratorioSelTodo_Result> SIGESU_LaboratorioSelTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_LaboratorioSelTodo_Result>("SIGESU_LaboratorioSelTodo");
        }
    
        public virtual ObjectResult<SIGESU_ProductoSelAtributosxIdProducto_Result> SIGESU_ProductoSelAtributosxIdProducto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_ProductoSelAtributosxIdProducto_Result>("SIGESU_ProductoSelAtributosxIdProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<SIGESU_SucursalAlmacenSelTodo_Result> SIGESU_SucursalAlmacenSelTodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_SucursalAlmacenSelTodo_Result>("SIGESU_SucursalAlmacenSelTodo");
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionIns_Result> SIGESU_PlanificacionIns(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionIns_Result>("SIGESU_PlanificacionIns", xmlParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionSelUltimoGenerado_Result> SIGESU_PlanificacionSelUltimoGenerado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionSelUltimoGenerado_Result>("SIGESU_PlanificacionSelUltimoGenerado");
        }
    
        public virtual ObjectResult<SIGESU_ServidorSel_Result> SIGESU_ServidorSel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_ServidorSel_Result>("SIGESU_ServidorSel");
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionSelxIdPlanificacion_Result> SIGESU_PlanificacionSelxIdPlanificacion(Nullable<int> idPlanificacion)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionSelxIdPlanificacion_Result>("SIGESU_PlanificacionSelxIdPlanificacion", idPlanificacionParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionAct_Result> SIGESU_PlanificacionAct(Nullable<int> idPlanificacion, string numeroPlanificacion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<bool> remuestreo, string observacion, string estado, Nullable<int> idEspecialista, Nullable<int> idLaboratorio, Nullable<int> idPlanificacionOrigen, string idSucursalAlmacen)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            var numeroPlanificacionParameter = numeroPlanificacion != null ?
                new ObjectParameter("NumeroPlanificacion", numeroPlanificacion) :
                new ObjectParameter("NumeroPlanificacion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var remuestreoParameter = remuestreo.HasValue ?
                new ObjectParameter("Remuestreo", remuestreo) :
                new ObjectParameter("Remuestreo", typeof(bool));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var idEspecialistaParameter = idEspecialista.HasValue ?
                new ObjectParameter("IdEspecialista", idEspecialista) :
                new ObjectParameter("IdEspecialista", typeof(int));
    
            var idLaboratorioParameter = idLaboratorio.HasValue ?
                new ObjectParameter("IdLaboratorio", idLaboratorio) :
                new ObjectParameter("IdLaboratorio", typeof(int));
    
            var idPlanificacionOrigenParameter = idPlanificacionOrigen.HasValue ?
                new ObjectParameter("IdPlanificacionOrigen", idPlanificacionOrigen) :
                new ObjectParameter("IdPlanificacionOrigen", typeof(int));
    
            var idSucursalAlmacenParameter = idSucursalAlmacen != null ?
                new ObjectParameter("IdSucursalAlmacen", idSucursalAlmacen) :
                new ObjectParameter("IdSucursalAlmacen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionAct_Result>("SIGESU_PlanificacionAct", idPlanificacionParameter, numeroPlanificacionParameter, fechaInicioParameter, fechaFinParameter, remuestreoParameter, observacionParameter, estadoParameter, idEspecialistaParameter, idLaboratorioParameter, idPlanificacionOrigenParameter, idSucursalAlmacenParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioAct_Result> SIGESU_PlanificacionLaboratorioAct(Nullable<int> idPlanificacionLaboratorio, Nullable<int> numeroVeces, string resultado, Nullable<System.DateTime> fechaCheckin, Nullable<System.DateTime> fechaEdicion, Nullable<System.DateTime> fechaValidacion, Nullable<System.DateTime> fechaImpresion, Nullable<bool> aplicaRemuestreo, string resultadoAdverso)
        {
            var idPlanificacionLaboratorioParameter = idPlanificacionLaboratorio.HasValue ?
                new ObjectParameter("IdPlanificacionLaboratorio", idPlanificacionLaboratorio) :
                new ObjectParameter("IdPlanificacionLaboratorio", typeof(int));
    
            var numeroVecesParameter = numeroVeces.HasValue ?
                new ObjectParameter("NumeroVeces", numeroVeces) :
                new ObjectParameter("NumeroVeces", typeof(int));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            var fechaCheckinParameter = fechaCheckin.HasValue ?
                new ObjectParameter("FechaCheckin", fechaCheckin) :
                new ObjectParameter("FechaCheckin", typeof(System.DateTime));
    
            var fechaEdicionParameter = fechaEdicion.HasValue ?
                new ObjectParameter("FechaEdicion", fechaEdicion) :
                new ObjectParameter("FechaEdicion", typeof(System.DateTime));
    
            var fechaValidacionParameter = fechaValidacion.HasValue ?
                new ObjectParameter("FechaValidacion", fechaValidacion) :
                new ObjectParameter("FechaValidacion", typeof(System.DateTime));
    
            var fechaImpresionParameter = fechaImpresion.HasValue ?
                new ObjectParameter("FechaImpresion", fechaImpresion) :
                new ObjectParameter("FechaImpresion", typeof(System.DateTime));
    
            var aplicaRemuestreoParameter = aplicaRemuestreo.HasValue ?
                new ObjectParameter("AplicaRemuestreo", aplicaRemuestreo) :
                new ObjectParameter("AplicaRemuestreo", typeof(bool));
    
            var resultadoAdversoParameter = resultadoAdverso != null ?
                new ObjectParameter("ResultadoAdverso", resultadoAdverso) :
                new ObjectParameter("ResultadoAdverso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioAct_Result>("SIGESU_PlanificacionLaboratorioAct", idPlanificacionLaboratorioParameter, numeroVecesParameter, resultadoParameter, fechaCheckinParameter, fechaEdicionParameter, fechaValidacionParameter, fechaImpresionParameter, aplicaRemuestreoParameter, resultadoAdversoParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioSelxIdPlanificacionLaboratorio_Result> SIGESU_PlanificacionLaboratorioSelxIdPlanificacionLaboratorio(Nullable<int> idPlanificacionLaboratorio)
        {
            var idPlanificacionLaboratorioParameter = idPlanificacionLaboratorio.HasValue ?
                new ObjectParameter("IdPlanificacionLaboratorio", idPlanificacionLaboratorio) :
                new ObjectParameter("IdPlanificacionLaboratorio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioSelxIdPlanificacionLaboratorio_Result>("SIGESU_PlanificacionLaboratorioSelxIdPlanificacionLaboratorio", idPlanificacionLaboratorioParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioActxIdPlanificacion_Result> SIGESU_PlanificacionLaboratorioActxIdPlanificacion(Nullable<int> idPlanificacion, Nullable<int> numeroVeces, string resultado, Nullable<System.DateTime> fechaCheckin, Nullable<System.DateTime> fechaEdicion, Nullable<System.DateTime> fechaValidacion, Nullable<System.DateTime> fechaImpresion, Nullable<bool> aplicaRemuestreo, string resultadoAdverso)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            var numeroVecesParameter = numeroVeces.HasValue ?
                new ObjectParameter("NumeroVeces", numeroVeces) :
                new ObjectParameter("NumeroVeces", typeof(int));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            var fechaCheckinParameter = fechaCheckin.HasValue ?
                new ObjectParameter("FechaCheckin", fechaCheckin) :
                new ObjectParameter("FechaCheckin", typeof(System.DateTime));
    
            var fechaEdicionParameter = fechaEdicion.HasValue ?
                new ObjectParameter("FechaEdicion", fechaEdicion) :
                new ObjectParameter("FechaEdicion", typeof(System.DateTime));
    
            var fechaValidacionParameter = fechaValidacion.HasValue ?
                new ObjectParameter("FechaValidacion", fechaValidacion) :
                new ObjectParameter("FechaValidacion", typeof(System.DateTime));
    
            var fechaImpresionParameter = fechaImpresion.HasValue ?
                new ObjectParameter("FechaImpresion", fechaImpresion) :
                new ObjectParameter("FechaImpresion", typeof(System.DateTime));
    
            var aplicaRemuestreoParameter = aplicaRemuestreo.HasValue ?
                new ObjectParameter("AplicaRemuestreo", aplicaRemuestreo) :
                new ObjectParameter("AplicaRemuestreo", typeof(bool));
    
            var resultadoAdversoParameter = resultadoAdverso != null ?
                new ObjectParameter("ResultadoAdverso", resultadoAdverso) :
                new ObjectParameter("ResultadoAdverso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioActxIdPlanificacion_Result>("SIGESU_PlanificacionLaboratorioActxIdPlanificacion", idPlanificacionParameter, numeroVecesParameter, resultadoParameter, fechaCheckinParameter, fechaEdicionParameter, fechaValidacionParameter, fechaImpresionParameter, aplicaRemuestreoParameter, resultadoAdversoParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioIns_Result> SIGESU_PlanificacionLaboratorioIns(Nullable<int> idPlanificacion)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioIns_Result>("SIGESU_PlanificacionLaboratorioIns", idPlanificacionParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioSel_Result> SIGESU_PlanificacionLaboratorioSel(Nullable<int> idPlanificacion)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioSel_Result>("SIGESU_PlanificacionLaboratorioSel", idPlanificacionParameter);
        }
    
        public virtual ObjectResult<SIGESU_PlanificacionLaboratorioActxIdPlanificacionxImpresion_Result> SIGESU_PlanificacionLaboratorioActxIdPlanificacionxImpresion(Nullable<int> idPlanificacion, Nullable<int> numeroVeces, string resultado, Nullable<System.DateTime> fechaCheckin, Nullable<System.DateTime> fechaEdicion, Nullable<System.DateTime> fechaValidacion, Nullable<System.DateTime> fechaImpresion, Nullable<bool> aplicaRemuestreo, string resultadoAdverso)
        {
            var idPlanificacionParameter = idPlanificacion.HasValue ?
                new ObjectParameter("IdPlanificacion", idPlanificacion) :
                new ObjectParameter("IdPlanificacion", typeof(int));
    
            var numeroVecesParameter = numeroVeces.HasValue ?
                new ObjectParameter("NumeroVeces", numeroVeces) :
                new ObjectParameter("NumeroVeces", typeof(int));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            var fechaCheckinParameter = fechaCheckin.HasValue ?
                new ObjectParameter("FechaCheckin", fechaCheckin) :
                new ObjectParameter("FechaCheckin", typeof(System.DateTime));
    
            var fechaEdicionParameter = fechaEdicion.HasValue ?
                new ObjectParameter("FechaEdicion", fechaEdicion) :
                new ObjectParameter("FechaEdicion", typeof(System.DateTime));
    
            var fechaValidacionParameter = fechaValidacion.HasValue ?
                new ObjectParameter("FechaValidacion", fechaValidacion) :
                new ObjectParameter("FechaValidacion", typeof(System.DateTime));
    
            var fechaImpresionParameter = fechaImpresion.HasValue ?
                new ObjectParameter("FechaImpresion", fechaImpresion) :
                new ObjectParameter("FechaImpresion", typeof(System.DateTime));
    
            var aplicaRemuestreoParameter = aplicaRemuestreo.HasValue ?
                new ObjectParameter("AplicaRemuestreo", aplicaRemuestreo) :
                new ObjectParameter("AplicaRemuestreo", typeof(bool));
    
            var resultadoAdversoParameter = resultadoAdverso != null ?
                new ObjectParameter("ResultadoAdverso", resultadoAdverso) :
                new ObjectParameter("ResultadoAdverso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SIGESU_PlanificacionLaboratorioActxIdPlanificacionxImpresion_Result>("SIGESU_PlanificacionLaboratorioActxIdPlanificacionxImpresion", idPlanificacionParameter, numeroVecesParameter, resultadoParameter, fechaCheckinParameter, fechaEdicionParameter, fechaValidacionParameter, fechaImpresionParameter, aplicaRemuestreoParameter, resultadoAdversoParameter);
        }
    }
}
